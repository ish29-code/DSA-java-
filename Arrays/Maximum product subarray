FOR EXAMPLE ----> arr[] = [-2, 6, -3, -10, 0, 2] ------> 180
firstly base case then loop i=1 to i<n then if arr[i]<0 then swap max with min
if not then max = max of arr[i] , max*arr[i]
and min = min of arr[i] , min*arr[i]
and store max of min and max in result and return result.

class Solution {
    // Function to find maximum product subarray
    int maxProduct(int[] arr) {
        if (arr == null || arr.length == 0) {
            return 0;
        }

        int max_so_far = arr[0];
        int max_ending_here = arr[0];
        int min_ending_here = arr[0];

        for (int i = 1; i < arr.length; i++) {
            if (arr[i] < 0) {
                // Swap max and min
                int temp = max_ending_here;
                max_ending_here = min_ending_here;
                min_ending_here = temp;
            }

            max_ending_here = Math.max(arr[i], max_ending_here * arr[i]);
            min_ending_here = Math.min(arr[i], min_ending_here * arr[i]);

            max_so_far = Math.max(max_so_far, max_ending_here);
        }

        return max_so_far;
    }
}
