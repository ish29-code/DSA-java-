  Input: A[] = {1, 5, 10, 20, 30} , B[] = {5, 13, 15, 20}, C[] = {5, 20} 
Output: 5 20
Explanation: 5 and 20 are common in all the arrays.

class Solution {
    // Function to find common elements in three arrays.
    public List<Integer> commonElements(List<Integer> arr1, List<Integer> arr2,
                                        List<Integer> arr3) {
        // Code Here
     List<Integer> result = new ArrayList<>();
    int i = 0, j = 0, k = 0;

    while (i < arr1.size() && j < arr2.size() && k < arr3.size()) {
        // If arr1[i] == arr2[j] == arr3[k], it's a common element
        if (arr1.get(i).equals(arr2.get(j)) && arr2.get(j).equals(arr3.get(k))) {
            // Avoid duplicates by checking if this isn't already added
            if (result.isEmpty() || !result.get(result.size() - 1).equals(arr1.get(i))) {
                result.add(arr1.get(i));
            }
            i++;
            j++;
            k++;
        } 
        // Move the pointer with the smallest value to try and align
        else if (arr1.get(i) < arr2.get(j)) {
            i++;
        } else if (arr2.get(j) < arr3.get(k)) {
            j++;
        } else {
            k++;
        }
    }

    // If no common elements, return -1 as per the problem statement
    if (result.isEmpty()) {
        result.add(-1);
    }

    return result;
                                        }
}
