Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]



public class Solution { //o(nlogn)
    public ListNode getmid(ListNode head){
        ListNode slow = head;
        ListNode fast = head;

        while(fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode mergell = new ListNode(-1);
        ListNode temp = mergell;

        while(list1 != null && list2 != null){
            if(list1.val <= list2.val){
                temp.next = list1;
                list1 = list1.next;
            } else {
                temp.next = list2;
                list2 = list2.next;
            }
            temp = temp.next;
        }

        // Append the remaining elements of the non-empty list, if any
        if(list1 != null){
            temp.next = list1;
        } else {
            temp.next = list2;
        }

        return mergell.next;
    }

    public ListNode merge(ListNode head){
        if(head == null || head.next == null){
            return head;
        }

        ListNode mid = getmid(head);
        ListNode righthead = mid.next;
        mid.next = null;

        ListNode Nleft = merge(head);
        ListNode Nright = merge(righthead);

        return mergeTwoLists(Nleft, Nright);
    }
}
