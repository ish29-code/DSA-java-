Input: head = [1,2,3,4,5], k = 2
Output: [4,5,1,2,3]


class Solution {
    public ListNode findNthNode(ListNode temp,int k){//o(n)
        int count = 1;
        while(temp!=null){
            if(count == k){
                return temp;
            }
            count++;
            temp=temp.next;
        }
        return temp;
    }
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null || k==0){
            return head;
        }
        ListNode tail = head;
        int len = 1;
        while(tail.next!=null){
            tail=tail.next;
            len++;
        }

        k=k%len;

        tail.next = head;
        ListNode newLastNode = findNthNode(head,len-k);
        head = newLastNode.next;
        newLastNode.next = null;

        return head;
    }
}
