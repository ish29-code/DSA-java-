class Solution {
    static class pair{
        int value,index;
        pair(int v,int i){
            this.value=v;
            this.index=i;
        }
    }
    private static void inorder(int arr[],ArrayList<Integer> BT,int n,int idx){
        if(idx>=n){
            return;
        }
        inorder(arr,BT,n,2*idx+1);
        BT.add(arr[idx]);
        inorder(arr,BT,n,2*idx+2);
    }
    public static int minSwaps(int[] arr) {
        // code here
        int n = arr.length;
        ArrayList<Integer> inorderlist = new ArrayList<>();
        
        inorder(arr,inorderlist,n,0);
        
        ArrayList<pair> vec = new ArrayList<>();
        for(int i=0;i<n;i++){
            vec.add(new pair(inorderlist.get(i),i));
        }
        
        vec.sort(Comparator.comparingInt(p->p.value));
        
        int swap=0;
        
        for(int i=0;i<n;i++){
            if(vec.get(i).index==i){
                continue;
            }
            
            swap++;
            Collections.swap(vec,i,vec.get(i).index);
            
            i--;
        }
        return swap;
    }
}
