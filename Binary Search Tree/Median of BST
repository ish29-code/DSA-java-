Input: root = [6, 3, 8, 1, 4, 7, 9]
       6
     /   \
   3      8   
 /  \    /  \
1    4  7    9
Output: 6
Explanation: Inorder of Given BST will be: 1, 3, 4, 6, 7, 8, 9. So, here median will 6.

class Tree {
    public static void inorder(Node root,ArrayList<Integer>nodes){
        if(root==null){
            return;
        }
        inorder(root.left,nodes);
        nodes.add(root.data);
        inorder(root.right,nodes);
    }
    public static float findMedian(Node root) {
        // code here.
        ArrayList<Integer> nodes = new ArrayList<>();
        inorder(root,nodes);
        
        int n = nodes.size();
        if(n%2==1){
            //odd
            return nodes.get(n/2);
        }
        else{
            //even--->average
            return (nodes.get(n/2-1)+nodes.get(n/2))/2.0f;
        }
    }
}
