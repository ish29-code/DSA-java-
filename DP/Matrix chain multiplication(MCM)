Input: arr[] = [2, 1, 3, 4]
Output: 20
Explanation: There are 3 matrices of dimensions 2 × 1, 1 × 3, and 3 × 4, Let this 3 input matrices be M1, M2, and M3. There are two ways to multiply: ((M1 x M2) x M3) and (M1 x (M2 x M3)), note that the result of (M1 x M2) is a 2 x 3 matrix and result of (M2 x M3) is a 1 x 4 matrix. 
((M1 x M2) x M3)  requires (2 x 1 x 3) + (2 x 3 x 4) = 30 
(M1 x (M2 x M3))  requires (1 x 3 x 4) + (2 x 1 x 4) = 20. 
The minimum of these two is 20.


class Solution {
    static int t[][]=new int[1001][1001]; 
    static int matrixMultiplication(int arr[]) {
        // code here
        int n = arr.length;
        
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                t[i][j]=-1;
            }
        }
        return solve(arr,1,n-1);
    }
    static int solve(int arr[],int i,int j){
        //base case
        if(i>=j){
            return 0;
        }
        if(t[i][j]!=-1){
            return t[i][j];
        }
        
        //k loop
        int mincost = Integer.MAX_VALUE;
        for(int k=i;k<j;k++){
            int temp = solve(arr,i,k)+solve(arr,k+1,j)+arr[i-1]*arr[k]*arr[j];
            mincost = Math.min(temp,mincost);
        }
        t[i][j] = mincost;
        return t[i][j];
    }
}
