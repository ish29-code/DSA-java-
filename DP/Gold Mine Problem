Input: mat[][] = [[1, 3, 3], [2, 1, 4],[0, 6, 4]]
Output: 12
Explaination: The path is {(1,0) -> (2,1) -> (2,2)}.


class Solution {
    public int maxGold(int mat[][]) {
        // code here
        int n = mat.length;
        int m = mat[0].length;
        
        int dp[][] = new int[n][m];
        
        
        for(int i=0;i<n;i++){
            dp[i][m-1] = mat[i][m-1];
        }
        
        for(int j=m-2;j>=0;j--){
            for(int i=0;i<n;i++){
                int right = dp[i][j+1];
                int right_up = (i>0) ? dp[i-1][j+1] : 0;
                int right_down = (i<n-1) ? dp[i+1][j+1] : 0;
                
                dp[i][j] =mat[i][j] + Math.max(right,Math.max(right_up,right_down));
            }
        }
        int maxgold = 0;
        for(int i=0;i<n;i++){
            maxgold = Math.max(maxgold,dp[i][0]);
        }
        return maxgold;
    }
}
