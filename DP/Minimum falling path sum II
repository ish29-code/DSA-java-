Input: grid = [[1,2,3],[4,5,6],[7,8,9]]
Output: 13
Explanation: 
The possible falling paths are:
[1,5,9], [1,5,7], [1,6,7], [1,6,8],
[2,4,8], [2,4,9], [2,6,7], [2,6,8],
[3,4,8], [3,4,9], [3,5,7], [3,5,9]
The falling path with the smallest sum is [1,5,7], so the answer is 13.

class Solution {
    public int minFallingPathSum(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;

        int dp[][] = new int[n][m];
        for(int j=0;j<m;j++){
            dp[0][j]=grid[0][j];
        }

        for(int i=1;i<n;i++){
            for(int j=0;j<m;j++){
                int minprev = Integer.MAX_VALUE;
                for(int k=0;k<n;k++){
                    if(k!=j){
                        minprev = Math.min(minprev,dp[i-1][k]);
                    }
                }
                dp[i][j] = minprev+grid[i][j];
            }
        }
        int minpath = Integer.MAX_VALUE;
        for(int j=0;j<m;j++){
            minpath = Math.min(minpath,dp[n-1][j]);
        }
        return minpath;
    }
}
