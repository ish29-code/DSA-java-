arr[] = {3, 5, 10, 15, 17, 12, 9}
K = 4
Output : 
62
Explanation :
Then disjoint pairs with difference less
than K are, (3, 5), (10, 12), (15, 17)
max sum which we can get is 
3 + 5 + 10 + 12 + 15 + 17 = 62
Note that an alternate way to form 
disjoint pairs is,(3, 5), (9, 12), (15, 17)
but this pairing produces less sum.



class Solution {
    public static int maxSumPairWithDifferenceLessThanK(int arr[], int N, int K) {
        // Your code goes here
        Arrays.sort(arr);
        int dp[] = new int[N+1];
        
        dp[0]=0;
        for(int i=1;i<N;i++){
            dp[i] = dp[i-1];
            
            if(arr[i]-arr[i-1]<K){
                int pairsum = (arr[i]+arr[i-1]);
                if(i>=2){
                    dp[i] = Math.max(dp[i],dp[i-2]+pairsum);
                }
                else{
                    dp[i] = Math.max(dp[i],pairsum);
                }
            }
        }
        return dp[N-1];
    }
}
