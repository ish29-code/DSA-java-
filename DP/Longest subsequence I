Input: arr[] = [10, 9, 4, 5, 4, 8, 6]
Output: 3
Explanation: The three possible subsequences of length 3 are {10, 9, 8}, {4, 5, 4}, and {4, 5, 6}, where adjacent elements have a absolute difference of 1. No valid subsequence of greater length could be formed.

class Solution {
    public static int longestSubseq(int[] arr) {
        // code here
        int n = arr.length;
        int dp[] = new int[n];
        Arrays.fill(dp,1);
        
        int maxlen=1;
        for(int i=1;i<n;i++){
            for(int j=0;j<i;j++){
                if(Math.abs(arr[i]-arr[j])==1){
                    dp[i] = Math.max(dp[i],dp[j]+1);
                }
            }
            maxlen = Math.max(maxlen,dp[i]);
        }
        return maxlen;
    }
}
