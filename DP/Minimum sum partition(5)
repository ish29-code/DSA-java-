Input: arr[] = [1, 6, 11, 5]
Output: 1
Explanation: 
Subset1 = {1, 5, 6}, sum of Subset1 = 12 
Subset2 = {11}, sum of Subset2 = 11 
Hence, minimum difference is 1.  

class Solution {

    public int minDifference(int arr[]) {
        // Your code goes here
        int n = arr.length;
        int totalsum=0;
        for(int num : arr){
            totalsum += num;
        }
        
        boolean dp[][] = new boolean[n+1][totalsum/2+1];
        
        for(int i=0;i<=n;i++){
            dp[i][0] = true;
        }
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=totalsum/2;j++){
                if(j>=arr[i-1]){
                    dp[i][j] = dp[i-1][j-arr[i-1]] || dp[i-1][j];
                }
                else{
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        
        int mindiff = Integer.MAX_VALUE;
        for(int j=totalsum/2;j>=0;j--){
           if(dp[n][j]){
                mindiff = totalsum -2*j;
                break;
           }
        }
        return mindiff;
    }
}
