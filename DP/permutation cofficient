Input: n = 10, k = 2
Output: 90
Explanation: For first case: Ans = 10! / (10 - 2)! = 10! / 8! , 10! is 8!*9*10 and 8! is 8!, Ans = 9*10 = 90.


class Solution {
    public int permutationCoeff(int n, int k) {
        // Code here
        int MOD = 1000000007;
        /*int dp[][] = new int[n+1][k+1];
        
        for(int i=0;i<=n;i++){
            for(int j=0;j<=Math.min(i,k);j++){
                if(j==0){
                    dp[i][j]=1;
                }
                else{
                    dp[i][j] = (int)(((long)dp[i-1][j] + (long)j*dp[i-1][j-1])%MOD);
                }
            }
        }
        return dp[n][k];*/
        
        /*int dp[] = new int[k+1];
        dp[0]=1;
        
        for(int i=1;i<=n;i++){
            for(int j=Math.min(i,k);j>0;j--){
                dp[j] = (int)(((long) dp[j] + (long)j*dp[j-1])%MOD);
            }
        }
        return dp[k];*/
        
        long p=1;
        
        for(int i=0;i<k;i++){
            p = (p*(n-i))%MOD;
        }
        return (int) p;
    }
}
