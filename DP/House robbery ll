Input: nums = [2,3,2]
Output: 3
Explanation: You cannot rob house 1 (money = 2) and then rob house 3 (money = 2), because they are adjacent houses.

class Solution {
    public int rob(int[] nums) {
        int n = nums.length;
        if(n==0){
            return 0;
        }
        if(n==1){
            return nums[0];
        }
        return Math.max(roblen(nums,0,n-2),roblen(nums,1,n-1));
    }
    public int roblen(int nums[],int start,int end){
        int n = end-start+1;
        int dp[] = new int[n];
        dp[0] = nums[start];
        if(n==1){
            return dp[0];
        }
        dp[1] = Math.max(nums[start],nums[start+1]);

        for(int i=2;i<n;i++){
            dp[i] = Math.max(dp[i-1],dp[i-2]+nums[start+i]);
        }
        return dp[n-1];
    }
}
