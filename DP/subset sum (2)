Input: arr[] = [2, 3]
Output: [0, 2, 3, 5]
Explanation: When no elements are taken then Sum = 0. When only 2 is taken then Sum = 2. When only 3 is taken then Sum = 3. When elements 2 and 3 are taken then Sum = 2+3 = 5.


/*class Solution {
    public ArrayList<Integer> subsetSums(int[] arr) {
        // code here
        int n = arr.length;
        int sum = 0;
        for(int num : arr){
            sum+=num;
        }
        
        boolean dp[][] = new boolean[n+1][sum+1];
        
        for(int i=0;i<=n;i++){
            dp[i][0] = true;
        }
        
        for(int i=1;i<=n;i++){
            for(int j=0;j<=sum;j++){
                
                dp[i][j] = dp[i-1][j];
                
                if(arr[i-1]<=j){
                    dp[i][j] |= dp[i-1][j-arr[i-1]];
                }
            }
        }
        
        ArrayList<Integer> result = new ArrayList<>();
        for(int j=0;j<=sum;j++){
            if(dp[n][j]){
                result.add(j);
            }
        }
        return result;
    }
}*/

/*class Solution {
    public ArrayList<Integer> subsetSums(int[] arr) {
        int n = arr.length;
        
        ArrayList<Integer>[] dp = new ArrayList[n+1];
        for(int i=0;i<=n;i++){
            dp[i] = new ArrayList<>();
        }
        
        dp[0].add(0);
        
        for(int i=1;i<=n;i++){
            int curr = arr[i-1];
            dp[i].addAll(dp[i-1]);
            
            for(int sum : dp[i-1]){
               dp[i].add(sum+curr);
            }
        }
        return dp[n];
    }
}*/

class Solution {
    public ArrayList<Integer> subsetSums(int[] arr){
        int n = arr.length;
        ArrayList<Integer> dp = new ArrayList<>();
        dp.add(0);
        
        for(int i=0;i<n;i++){
            int curr = arr[i];
            int size = dp.size();
            for(int j=0;j<size;j++){
                dp.add(dp.get(j)+curr);
            }
        }
        return dp;
    }
}
