Input: m = 3, n = 2
Output: 3
Explanation: From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:
1. Right -> Down -> Down
2. Down -> Down -> Right
3. Down -> Right -> Down


class Solution {
    // Function to find total number of unique paths.
    public static int NumberOfPath(int a, int b) {
        // Your code here
        int dp[][] = new int[a+1][b+1];
        
        for(int i=0;i<a;i++){
            dp[i][0]=1;
        }
        for(int j=0;j<b;j++){
            dp[0][j]=1;
        }
        
        for(int i=1;i<=a;i++){
            for(int j=1;j<b;j++){
                dp[i][j] = dp[i-1][j]+dp[i][j-1];
            }
        }
        return dp[a-1][b-1];
    }
}
