Input: arr[] = [4, 2, 1, 8]
Output: 18
Explanation: After Shuffling, we get [1, 8, 2, 4]. Sum of absolute difference between consecutive elements after rearrangement = |1 - 8| + |8 - 2| + |2 - 4| + |4 - 1| = 7 + 6 + 2 + 3 = 18.


class Solution {
    public long maxSum(Long[] arr) {
        // code here
        Arrays.sort(arr);
        int n = arr.length;
        
        Long shuffeled[] = new Long[n];
        int low = 0,high=n-1;
        int index=0;
        
        while(low<=high){
            if(index%2==0){
                shuffeled[index++] = arr[low++];
            }
            else{
                shuffeled[index++] = arr[high--];
            }
        }
        
        long maxsum=0;
        for(int i=0;i<n;i++){
            maxsum+=Math.abs(shuffeled[i]-shuffeled[(i+1)%n]);
        }
        return maxsum;
        
        
    }
}
