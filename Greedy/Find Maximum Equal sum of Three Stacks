Input:
N1 = 3, N2 = 4, N3 = 2
S1 = {4,2,3}
S2 = {1,1,2,3}
S3= {1,4}
Output:
5
Explanation:
We can pop 1 element from the 1st stack, and 2
elements from the 2nd stack. Now remaining elements
yield the equal sum of the three stacks, that is 5.


class Solution {
    public static int maxEqualSum(int N1,int N2,int N3, int[] S1, int[] S2, int[] S3) {
        // code here
        int sum1=0,sum2=0,sum3=0;
        //calculayed all 3 sum
        for(int num : S1){
            sum1+=num;
        }
        for(int num : S2){
            sum2+=num;
        }
        for(int num : S3){
            sum3+=num;
        }
        
        int i1=0,i2=0,i3=0;//pointer for 3 arr
        
        while(i1<N1 && i2<N2 && i3<N3){
            if(sum1==sum2 && sum2 == sum3){
                return sum1;
            }
            if(sum1>=sum2 && sum1>=sum3){
                sum1 -= S1[i1++];
            }
            else if(sum2>=sum1 && sum2>=sum3){
                sum2 -= S2[i2++];
            }
            else{
                sum3 -= S3[i3++];
            }
        }
        return 0;
    }
}
        
